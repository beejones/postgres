# escape=`

# We used to use the visual studio container, but it's too outdated now
FROM cirrusci/windowsservercore:2019

SHELL ["powershell", "-NoLogo", "-NoProfile", "-Command"]


RUN `
    New-Item -Path 'HKLM:\SOFTWARE\Policies\Microsoft\VisualStudio' ; `
    New-Item -Path 'HKLM:\SOFTWARE\Policies\Microsoft\VisualStudio\Setup' ; `
    New-ItemProperty -Path 'HKLM:\SOFTWARE\Policies\Microsoft\VisualStudio\Setup' -Name KeepDownloadedPayloads -Value 0 -PropertyType DWord


# Install commandline debugger and log all crashes to c:\cirrus\crashlog.txt
#
# Done manually as doing this via chocolatey / the installer directly, ends up
# with a lot of unnecessary chaff, making the layer unnecessarily large.
RUN `
    mkdir c:\t ; `
    cd c:\t ; `
    curl.exe -sSL -o 'windsdksetup.exe' https://download.microsoft.com/download/9/7/9/97982c1d-d687-41be-9dd3-6d01e52ceb68/windowssdk/winsdksetup.exe ; `
    Start-Process -FilePath ".\windsdksetup.exe" `
      -ArgumentList '/Features OptionId.WindowsDesktopDebuggers /layout c:\t\sdk /quiet /norestart /log c:\t\sdk.log' `
    -Wait  ; `
    `
    Start-Process -FilePath msiexec.exe `
      -ArgumentList '/a \"C:\t\sdk\Installers\X64 Debuggers And Tools-x64_en-us.msi\" /qb /log install2.log' `
    -Wait ; `
    C:\Windows` Kits\10\Debuggers\x64\cdb.exe -version ; `
    `
    cd c:\ ; `
    Remove-Item C:\t\* -Force -Recurse ; `
    Remove-Item C:\t -Force -Recurse ; `
    Set-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AeDebug' -Name 'Debugger' -Value '\"C:\Windows Kits\10\Debuggers\x64\cdb.exe\" -p %ld -e %ld -g -kqm -c \".lines -e; .symfix+ ;.logappend c:\cirrus\crashlog.txt ; !peb; ~*kP ; .logclose ; q \"' ; `
    New-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AeDebug' -Name 'Auto' -Value 1 -PropertyType DWord ; `
    Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AeDebug' -Name Debugger; `
    setx PATH \"C:\Windows Kits\10\Debuggers\x64;$Env:PATH\" /m


# Install perl and bison.
#
# Done manually as choco takes a lot longer. I think it's download issues with
# powershell's download stuff? That's wy curl.exe is directly used here at least...
RUN `
    mkdir c:\t ; `
    cd c:\t ; `
    `
    curl.exe -sSL -o perl.zip `
        https://strawberryperl.com/download/5.30.3.1/strawberry-perl-5.30.3.1-64bit-portable.zip ; `
    7z.exe x .\perl.zip -xr!c -oc:\strawberry ; `
    `
    curl.exe -sSL -o winflexbison.zip `
        https://github.com/lexxmark/winflexbison/releases/download/v2.5.24/win_flex_bison-2.5.24.zip ; `
    7z.exe x .\winflexbison.zip -oc:\winflexbison ; `
    Rename-Item -Path c:\winflexbison\win_flex.exe c:\winflexbison\flex.exe ; `
    Rename-Item -Path c:\winflexbison\win_bison.exe c:\winflexbison\bison.exe ; `
    `
    cd c:\ ; `
    Remove-Item C:\t -Force -Recurse ; `
    setx PATH \"C:\strawberry\perl\bin;C:\winflexbison;C:\Program Files\Git\usr\bin;$Env:PATH\" /m


# Install visual studio
#
# Adding VS path to vcvarsall.bat so user of container doesn't need to know the full path
RUN `
    mkdir c:\t ; `
    cd c:\t ; `
    curl.exe -sSL -o c:\t\vs_buildtools.exe https://aka.ms/vs/16/release/vs_buildtools.exe ; `
    Start-Process -Wait `
        -FilePath c:\t\vs_buildtools.exe `
        -ArgumentList `
          '--quiet', '--wait', '--norestart', '--nocache', `
          '--installPath', 'c:\BuildTools', `
          '--add', 'Microsoft.VisualStudio.Component.VC.Tools.x86.x64', `
          '--add', 'Microsoft.VisualStudio.Component.Windows10SDK.20348'  ; `
    cd c:\ ; `
    Remove-Item C:\t -Force -Recurse ; `
    Remove-Item -Force -Recurse ${Env:TEMP}\*; `
    Remove-Item -Force -Recurse \"${Env:ProgramData}\Package Cache\"  ; `
    setx PATH \"c:\BuildTools\VC\Auxiliary\Build;$Env:PATH\" /m
