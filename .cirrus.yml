env:
  # accelerate initial clone
  CIRRUS_CLONE_DEPTH: 1
  # target to test, for all but OSX and windows
  CHECK: check-world
  CHECKFLAGS: -Otarget
  PGCTLTIMEOUT: 120

task:
  name: FreeBSD
  compute_engine_instance:
    image_project: pg-vm-images-aio
    image: family/pg-aio-freebsd-13-0
    platform: freebsd
    cpu: 4
    memory: 8G
    disk: 50
  env:
    CCACHE_SIZE: "500M"
    CCACHE_DIR: "/tmp/ccache_dir"
  sysconfig_script:
    - sysctl kern.corefile='/tmp/%N.%P.core'
    - sysctl kern.timecounter.hardware=TSC-low
    - sysctl vfs.write_behind=0
    - sysctl vfs.timestamp_precision=1
  ccache_cache:
    folder: "/tmp/ccache_dir"
  create_partition_script:
    - gpart recover da0 # fix backup partition table after resize
    - gpart show da0
    - swapoff -a || true # kill swap, so we can delete a partition
    - gpart delete -i 3 da0 # (apparently we can only have 4!?)
    - gpart add -t freebsd-ufs -l data8k -a 4096 da0
    - gpart show da0
    - newfs -U -b 8192 /dev/da0p3
  migrate_working_dir_script:
    - du -hs $CIRRUS_WORKING_DIR
    - mv $CIRRUS_WORKING_DIR $CIRRUS_WORKING_DIR.orig
    - mkdir $CIRRUS_WORKING_DIR
    - mount -o noatime /dev/da0p3 $CIRRUS_WORKING_DIR
    - cp -r $CIRRUS_WORKING_DIR.orig/* $CIRRUS_WORKING_DIR/
  create_user_script:
    - pw useradd postgres
    - chown -R postgres:postgres .
    - mkdir -p /tmp/ccache_dir
    - chown -R postgres:postgres /tmp/ccache_dir
  configure_script:
    - su postgres -c './configure --enable-cassert --enable-debug --enable-tap-tests --with-posix-aio --with-includes=/usr/local/include --with-libs=/usr/local/lib CC="ccache cc"'
  build_script:
    - su postgres -c 'gmake -s -j4 && gmake -s -j4 -C contrib'
  worker_buf_script:
    #- su postgres -c 'TEMP_CONFIG=$(realpath ci/worker_buf.conf) time gmake -s -j8 ${CHECK} ${CHECKFLAGS}' > worker_buf.log 2>&1
    - dtrace -n 'sched:::off-cpu { @[stack()] = count(); }' -o off_cpu.profile -c "sudo --preserve-env -u postgres gmake -s -j8 ${CHECK} ${CHECKFLAGS}"
  #worker_dio_script:
  #  - su postgres -c 'TEMP_CONFIG=$(realpath ci/worker_dio.conf) time gmake -s -j8 ${CHECK} ${CHECKFLAGS}' > worker_dio.log 2>&1
  #posix_aio_buf_script:
  #  - su postgres -c 'TEMP_CONFIG=$(realpath ci/posix_aio_buf.conf) time gmake -s -j8 ${CHECK} ${CHECKFLAGS}' > posix_aio_buf.log 2>&1
  #posix_aio_dio_script:
  #  - su postgres -c 'TEMP_CONFIG=$(realpath ci/posix_aio_dio.conf) time gmake -s -j8 ${CHECK} ${CHECKFLAGS}' > posix_aio_dio.log 2>&1
  always:
    log_profile:
      path: "**/**.profile"
      type: text/plain
  on_failure:
    core_script:
      for corefile in $(find /tmp -name '*.core' 2>/dev/null) ; do binary=$(gdb -quiet -core $corefile -batch -ex 'info auxv' | grep AT_EXECPATH | perl -pe "s/^.*\"(.*)\"\$/\$1/g") ; echo dumping $corefile for $binary ; gdb --batch --quiet -ex "thread apply all bt full" -ex "quit" $binary $corefile ; done
    debug_script:
      - for F in ` find . -name initdb.log -o -name regression.diffs -o -name 'postmaster*.log'` ; do echo === $F === ; head -1000 $F ; done
    log_artifacts:
      path: "**/**.log"
      type: text/plain
    regress_diffs_artifacts:
      path: "**/**.diffs"
      type: text/plain
    tap_artifacts:
      path: "**/regress_log_*"
      type: text/plain
