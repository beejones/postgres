name: ci-linux
on: [push]
jobs:
  ci-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install packages
      run: |
        sudo apt-get --yes update
        sudo apt-get --yes install gcc libreadline-dev flex bison make perl libipc-run-perl clang llvm-dev libperl-dev libpython-dev tcl-dev libldap2-dev libicu-dev docbook-xml docbook-xsl fop libxml2-utils xsltproc krb5-admin-server krb5-kdc krb5-user slapd ldap-utils libssl-dev pkg-config locales-all gdb
      env:
        DEBIAN_FRONTEND: noninteractive
    - name: Configure
      run: ./configure --enable-cassert --enable-debug --enable-tap-tests --with-tcl --with-python --with-perl --with-ldap --with-openssl --with-icu --with-llvm
    - name: Build
      run: |
        echo "COPT=-Wall -Werror" > src/Makefile.custom
        make -s -j3
    - name: Check world
      run: |
        echo '/tmp/%e-%s-%p.core' | sudo tee /proc/sys/kernel/core_pattern
        ulimit -c unlimited
        make -s check-world
      env:
        PG_TEST_EXTRA: "ssl kerberos"
        #PG_TEST_EXTRA: "ssl ldap kerberos" why does slapd fail to start?
    - name: Look for clues
      if: ${{ failure() }}
      run: |
        # dump useful logs (TODO: what else needs to be here?)
        for F in ` find . -name initdb.log -o -name regression.diffs ` ; do
          echo === $F ===
          head -1000 $F
        done
        # look for core files and spit out backtraces
        for corefile in $(find /tmp/ -name '*.core' 2>/dev/null) ; do
          binary=$(gdb -quiet -core $corefile -batch -ex 'info auxv' | grep AT_EXECFN | perl -pe "s/^.*\"(.*)\"\$/\$1/g")
          echo dumping $corefile for $binary
          gdb --batch --quiet -ex "thread apply all bt full" -ex "quit" $binary $corefile
        done
    - name: Documentation
      run: make -s docs
